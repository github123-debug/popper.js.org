{"version":3,"sources":["webpack:///./src/components/Layout.js"],"names":["Main","media","lg","NAVIGATION_WIDTH","FooterStyled","Footer","NavButtonWrapper","NavButtonContainer","Container","md","NavButtonCell","NavDivider","NavButton","Link","arrowCss","css","NavButtonDirection","components","CarbonAds","a","props","onClick","anchorScroll","children","event","element","document","querySelector","window","location","hash","scrollIntoView","isH2","nodeName","innerWidth","sizes","scrollBy","e","FloatingUIBanner","href","rel","target","EditPage","path","routes","route","find","slug","fileAbsolutePath","split","Layout","pageResources","pathname","useLayoutEffect","styles","title","json","pageContext","frontmatter","navigationLabel","root","validRoutes","flatten","reduce","acc","cur","concat","createTree","processRoutes","currentPathIndex","findIndex","prev","next","getPrevNextRoutes","to","data-first","data-prev","size","data-last","data-next","Date","getFullYear"],"mappings":"6WA0BA,IAAMA,EAAI,2EAINC,IAAMC,GAJA,8BAMSC,IANT,QAUJC,EAAe,YAAOC,IAAP,sBAAH,gDAIdJ,IAAMC,GAJQ,gBAKCC,IALD,QASZG,EAAgB,6HAMhBC,EAAqB,YAAOC,IAAP,sBAAH,mEAMpBP,IAAMQ,GANc,qBAWlBC,EAAa,sGAMbC,EAAU,qGAMZV,IAAMQ,GANM,oBAWVG,EAAY,YAAOC,OAAP,sBAAH,4OAmBXZ,IAAMQ,GAnBK,oBAuBXR,IAAMC,GAvBK,wHAqCTY,EAAWC,YAAH,sBAGVd,IAAMQ,GAHI,0BAQRO,EAAkB,uEAIpBf,IAAMQ,GAJc,cAQpBR,IAAMC,GARc,gEAqBlBe,EAAa,CACjB,OAAQC,IACRC,EAAG,SAACC,GAAD,OAED,WADA,CACA,mBAAOA,EAAP,CAAcC,QAASC,IACpBF,EAAMG,YAKb,SAASD,EAAaE,GAMpB,IACE,IAAMC,EAAUC,SAASC,cAAcC,OAAOC,SAASC,MACvDL,EAAQM,iBAER,IAAMC,EAA4B,OAArBP,EAAQQ,SAEjBL,OAAOM,YAAcC,IAAMjC,GACxB8B,GACHJ,OAAOQ,SAAS,GAAI,IAEbJ,GACTJ,OAAOQ,SAAS,EAAG,IAErB,MAAOC,KAGX,I,g1BAMaC,EAAmB,kBAC9B,iBACEvB,IAAG,EAiDHwB,KAAK,0BACLC,IAAI,sBACJC,OAAO,UApDT,4E,iEA0DIC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,YAAC,IAAD,MACG,SAACC,GACA,IAAMC,EAAQD,EAAOE,MAAK,SAACD,GAAD,OAAWA,EAAME,OAASJ,KAEpD,OACEE,GACE,iBACE9B,IAAG,EAIHwB,KAAI,gEACFM,EAAMG,iBAAiBC,MAAM,SAAS,GAExCT,IAAI,sBACJC,OAAO,UATT,sB,2CA6OKS,IA1NA,SAAC,GAAqD,IAAnD3B,EAAkD,EAAlDA,SAAUM,EAAwC,EAAxCA,SAAUsB,EAA8B,EAA9BA,cAC9BR,GAD4D,uDACrDd,EAASuB,UAkBtB,OAFAC,0BAAgB/B,EAAc,IAG5B,YAAC,IAAD,CAAaL,WAAYA,GACvB,YAAC,IAAD,CACEqC,OAAQvC,YAAF,m2BAmFFd,IAAMQ,GAnFJ,oRAkHAR,IAAMQ,GAlHN,2FAqIR,YAAC6B,EAAD,MACA,mBACEvB,IAAG,GAIFoC,GACC,YAAC,IAAD,CACEI,MACEJ,EAAcK,KAAKC,YAAYC,YAAYH,OAC3CJ,EAAcK,KAAKC,YAAYC,YAAYC,kBAIjD,YAAC,IAAD,CAAYC,KAAK,IAAInB,OAAO,WAAWE,KAAMA,IAC7C,YAAC3C,EAAD,KACE,YAAC,IAAD,KACGuB,EACD,YAACmB,EAAD,CAAUC,KAAMA,KAElB,YAAC,IAAD,MACG,SAACC,GAAY,IAAD,EA9KvB,SAA2BA,GACzB,IAAMiB,EA9FM,SAAVC,EAAWlB,GAAD,OACdA,EAAOmB,QACL,SAACC,EAAKC,GAAN,OAAcD,EAAIE,OAAOD,GAAKC,OAAOJ,EAAQG,EAAI1C,aACjD,IA2FoBuC,CAAQK,YAAWC,YAAcxB,EAAQD,KAEvD0B,EAAmBR,EAAYS,WACnC,SAACzB,GAAD,OAAWA,EAAME,OAASJ,KAG5B,MAAO,CACL4B,KAAMV,EAAYQ,EAAmB,GACrCG,KAAMX,EAAYQ,EAAmB,IAsKNI,CAAkB7B,GAAjC2B,EADG,EACHA,KAAMC,EADH,EACGA,KACd,OACE,YAAClE,EAAD,KACE,YAACC,EAAD,KACE,YAACG,EAAD,KACG6D,GACC,YAAC3D,EAAD,CAAW8D,GAAE,GAAKH,EAAKxB,KAAQ4B,cAAA,GAC7B,YAAC3D,EAAD,CAAoB4D,aAAA,GAClB,YAAC,IAAD,CAAaC,KAAM,GAAI9D,IAAKD,KAE7ByD,EAAKZ,kBAIZ,YAAChD,EAAD,MACA,YAACD,EAAD,KACG8D,GACC,YAAC5D,EAAD,CAAW8D,GAAE,GAAKF,EAAKzB,KAAQ+B,aAAA,GAC5BN,EAAKb,gBACN,YAAC3C,EAAD,CAAoB+D,aAAA,GAClB,YAAC,IAAD,CAAcF,KAAM,GAAI9D,IAAKD,aAWjD,YAACV,EAAD,WAAiB,IAAI4E,MAAOC,cAA5B","file":"6cd9c5f3-b7f7a9b595b27a1cccc5.js","sourcesContent":["/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React, { useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport { MDXProvider } from '@mdx-js/react';\nimport styled from '@emotion/styled';\nimport { Global, css } from '@emotion/react';\nimport CarbonAds from './CarbonAds';\nimport { Container, media, Footer, sizes } from './Framework';\nimport { MdxRoutes } from '@pauliescanlon/gatsby-mdx-routes';\nimport Navigation, { NAVIGATION_WIDTH } from './Navigation';\nimport SEO from './Seo';\nimport { createTree } from '../utils/createTree';\nimport processRoutes from '../utils/processRoutes';\n\nimport '@openfonts/luckiest-guy_latin';\nimport './layout.css';\nimport './prism-base2tone-pool-dark.css';\nimport { ChevronRight, ChevronLeft } from 'react-feather';\n\nconst Main = styled.main`\n  margin-left: 0;\n  padding-top: 45px;\n\n  ${media.lg} {\n    padding-top: 0;\n    margin-left: ${NAVIGATION_WIDTH}px;\n  }\n`;\n\nconst FooterStyled = styled(Footer)`\n  background: none;\n  border-top: 1px solid #44395d;\n\n  ${media.lg} {\n    margin-left: ${NAVIGATION_WIDTH}px;\n  }\n`;\n\nconst NavButtonWrapper = styled.div`\n  display: flex;\n  border-top: 1px solid #44395d;\n  margin-top: 50px;\n`;\n\nconst NavButtonContainer = styled(Container)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  padding: 0;\n\n  ${media.md} {\n    padding: 0 40px;\n  }\n`;\n\nconst NavButtonCell = styled.div`\n  display: flex;\n  min-width: 0;\n  width: 100%;\n`;\n\nconst NavDivider = styled.div`\n  display: none;\n  min-width: 1px;\n  background: #44395d;\n  height: 100%;\n\n  ${media.md} {\n    display: block;\n  }\n`;\n\nconst NavButton = styled(Link)`\n  position: relative;\n  font-size: 18px;\n  padding: 50px 40px;\n  color: #4edee5;\n  border-bottom: 2px solid transparent;\n  transition: none;\n  word-break: break-word;\n  width: 100%;\n\n  &[data-first] {\n    padding-right: 10px;\n  }\n\n  &[data-last] {\n    padding-left: 10px;\n    text-align: right;\n  }\n\n  ${media.md} {\n    font-size: 22px;\n  }\n\n  ${media.lg} {\n    font-size: 24px;\n  }\n\n  &:hover {\n    background-color: #281e36;\n    border-bottom-color: #4edee5;\n  }\n\n  &:active {\n    border-bottom-style: dashed;\n  }\n`;\n\nconst arrowCss = css`\n  vertical-align: 3px;\n\n  ${media.md} {\n    vertical-align: 0;\n  }\n`;\n\nconst NavButtonDirection = styled.span`\n  position: absolute;\n  top: 50px;\n\n  ${media.md} {\n    top: 54px;\n  }\n\n  ${media.lg} {\n    top: 56px;\n  }\n\n  &[data-prev] {\n    left: 10px;\n  }\n\n  &[data-next] {\n    right: 10px;\n  }\n`;\n\nconst components = {\n  'x-ad': CarbonAds,\n  a: (props) => (\n    // eslint-disable-next-line\n    <a {...props} onClick={anchorScroll}>\n      {props.children}\n    </a>\n  ),\n};\n\nfunction anchorScroll(event) {\n  // if (event) {\n  //   event.preventDefault();\n  //   window.history.pushState({}, '', event.currentTarget.getAttribute('href'));\n  // }\n\n  try {\n    const element = document.querySelector(window.location.hash);\n    element.scrollIntoView();\n\n    const isH2 = element.nodeName === 'H2';\n\n    if (window.innerWidth <= sizes.lg) {\n      if (!isH2) {\n        window.scrollBy(0, -60);\n      }\n    } else if (isH2) {\n      window.scrollBy(0, 50);\n    }\n  } catch (e) {}\n}\n\nconst flatten = (routes) =>\n  routes.reduce(\n    (acc, cur) => acc.concat(cur).concat(flatten(cur.children)),\n    []\n  );\n\nexport const FloatingUIBanner = () => (\n  <a\n    css={css`\n      all: unset;\n      box-sizing: border-box;\n      &:hover,\n      &:active,\n      &:focus {\n        border: none;\n      }\n      cursor: pointer;\n      position: fixed;\n      top: 0;\n      right: 0;\n      z-index: 1000;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 4rem;\n      background: #1f2028;\n      color: rgb(221, 214, 254);\n      border: none;\n      text-align: center;\n      font-size: 16px;\n      font-weight: bold;\n      text-decoration: none;\n      &:after {\n        content: '';\n        position: absolute;\n        top: 10px;\n        left: 10px;\n        bottom: 10px;\n        right: 10px;\n        border-radius: 20px;\n        filter: blur(5px);\n        z-index: -1;\n        background-repeat: no-repeat;\n        background-size: cover;\n        background-position: center;\n        background-image: radial-gradient(\n          circle,\n          rgba(51, 43, 61, 1) 4%,\n          rgba(54, 45, 74, 1) 13%,\n          rgba(65, 53, 120, 1) 40%,\n          rgba(110, 66, 122, 1) 55%,\n          rgba(119, 69, 122, 1) 71%,\n          rgba(32, 33, 40, 1) 100%\n        );\n      }\n    `}\n    href=\"https://floating-ui.com\"\n    rel=\"noopener noreferrer\"\n    target=\"_blank\"\n  >\n    The future of Popper is here! Floating UI is now available. Get it now!\n  </a>\n);\n\nconst EditPage = ({ path }) => (\n  <MdxRoutes>\n    {(routes) => {\n      const route = routes.find((route) => route.slug === path);\n\n      return (\n        route && (\n          <a\n            css={css`\n              margin-top: 15px;\n              display: inline-block;\n            `}\n            href={`https://github.com/floating-ui/popper.js.org/edit/master/src/${\n              route.fileAbsolutePath.split('/src/')[1]\n            }`}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Edit this page\n          </a>\n        )\n      );\n    }}\n  </MdxRoutes>\n);\n\nconst Layout = ({ children, location, pageResources, ...props }) => {\n  const path = location.pathname;\n  function getPrevNextRoutes(routes) {\n    const validRoutes = flatten(createTree(processRoutes(routes, path)));\n\n    const currentPathIndex = validRoutes.findIndex(\n      (route) => route.slug === path\n    );\n\n    return {\n      prev: validRoutes[currentPathIndex - 1],\n      next: validRoutes[currentPathIndex + 1],\n    };\n  }\n\n  // HACK: remove this if the plugin can somehow work by default...\n  // Fixes the anchor not being scrolled to on page load\n  useLayoutEffect(anchorScroll, []);\n\n  return (\n    <MDXProvider components={components}>\n      <Global\n        styles={css`\n          h1,\n          h2,\n          h3,\n          h4,\n          h5,\n          h6 {\n            color: #f4e0f1;\n            font-weight: bold;\n          }\n\n          h1 {\n            font-size: 40px;\n            margin-top: 20px;\n            padding-top: 20px;\n            line-height: 1.1;\n          }\n\n          h2 {\n            font-size: 32px;\n            line-height: 1.3;\n          }\n\n          h3 {\n            font-size: 24px;\n            margin-bottom: 10px;\n            margin-top: 40px;\n          }\n\n          h4 {\n            font-size: 20px;\n            margin-bottom: 10px;\n          }\n\n          h5 {\n            font-size: 18px;\n          }\n\n          h2::before {\n            content: ' ';\n            display: block;\n            border-bottom: 1px solid #44395d;\n            padding-top: 20px;\n            margin-bottom: 40px;\n          }\n\n          blockquote {\n            margin: 0;\n            padding: 0.5em 30px;\n            border-radius: 0px 10px 10px 0px;\n            background-color: rgba(135, 82, 27, 0.25);\n            color: #ddc5a1;\n            border-left: 2px dashed #ddc5a1;\n          }\n\n          h3 > code[class*='language-'] {\n            color: #ffe69d;\n          }\n\n          ul {\n            padding-left: 20px;\n          }\n\n          li {\n            margin-bottom: 5px;\n          }\n\n          a {\n            color: #ffe69d;\n            text-decoration: none;\n            padding-bottom: 1px;\n            border-bottom: 2px solid rgba(255, 228, 148, 0.25);\n            transition: border-bottom-color 0.15s ease-in-out;\n\n            &:hover {\n              border-bottom: 2px solid rgba(255, 228, 148, 1);\n            }\n\n            &:active {\n              border-bottom-style: dashed;\n            }\n          }\n\n          ${media.md} {\n            pre[class*='language-'] {\n              padding: 15px 20px;\n            }\n          }\n\n          h1 .gatsby-link-icon {\n            display: none;\n          }\n\n          h2,\n          h3,\n          h4,\n          h5,\n          h6 {\n            &:hover {\n              .gatsby-link-icon {\n                opacity: 1;\n              }\n            }\n          }\n\n          .gatsby-link-icon {\n            fill: #ffb6b3;\n            border: none;\n            margin-left: -30px;\n            padding-right: 10px;\n            opacity: 0;\n            transition: opacity 0.15s ease-in-out;\n            float: right;\n\n            ${media.md} {\n              float: left;\n            }\n\n            &:focus {\n              opacity: 1;\n            }\n\n            &:hover {\n              border: none;\n            }\n\n            svg {\n              width: 20px;\n              height: 20px;\n            }\n          }\n        `}\n      />\n      <FloatingUIBanner />\n      <div\n        css={css`\n          margin-top: 4rem;\n        `}\n      >\n        {pageResources && (\n          <SEO\n            title={\n              pageResources.json.pageContext.frontmatter.title ||\n              pageResources.json.pageContext.frontmatter.navigationLabel\n            }\n          />\n        )}\n        <Navigation root=\"/\" target=\"location\" path={path} />\n        <Main>\n          <Container>\n            {children}\n            <EditPage path={path} />\n          </Container>\n          <MdxRoutes>\n            {(routes) => {\n              const { prev, next } = getPrevNextRoutes(routes);\n              return (\n                <NavButtonWrapper>\n                  <NavButtonContainer>\n                    <NavButtonCell>\n                      {prev && (\n                        <NavButton to={`${prev.slug}`} data-first>\n                          <NavButtonDirection data-prev>\n                            <ChevronLeft size={28} css={arrowCss} />\n                          </NavButtonDirection>\n                          {prev.navigationLabel}\n                        </NavButton>\n                      )}\n                    </NavButtonCell>\n                    <NavDivider />\n                    <NavButtonCell>\n                      {next && (\n                        <NavButton to={`${next.slug}`} data-last>\n                          {next.navigationLabel}\n                          <NavButtonDirection data-next>\n                            <ChevronRight size={28} css={arrowCss} />\n                          </NavButtonDirection>\n                        </NavButton>\n                      )}\n                    </NavButtonCell>\n                  </NavButtonContainer>\n                </NavButtonWrapper>\n              );\n            }}\n          </MdxRoutes>\n        </Main>\n        <FooterStyled>© {new Date().getFullYear()} MIT License</FooterStyled>\n      </div>\n    </MDXProvider>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}